---
- name: "PLAY 1: CONFIGURE SWITCH PORTS"
  hosts: meraki
  connection: local
  gather_facts: false
  collections:
    - cisco.meraki
#  vars_files:
#    - networks.yml
  vars:
    meraki_headers:
      Content-Type: "application/json"
      X-Cisco-Meraki-API-Key: "{{ meraki_key }}"

  tasks:

    - name: "TASK 1: Read VLAN data from Excel"
      command: python3 read_excel.py "MS Switch Ports"
      args:
        chdir: ./scripts  # Specify the path to your Python script
      register: ms_port
      changed_when: false
      check_mode: no
      run_once: true

    - set_fact:
        ms_port: "{{ ms_port.stdout | from_json }}"

    - name: "TASK 2: CONFIGURE ACCESS PORTS WITHOUT RADIUS"
      meraki_ms_switchport:
        auth_key: "{{ meraki_key }}"
        serial: "{{ item.serial_nos }}"
        state: present
        number: "{{ item.id }}"
        name: "{{ item.name }}"
        type:  "{{ item.type }}"
        vlan: "{{ item.vlan }}"
        stp_guard: "{{ item.stpGuard }}"
        access_policy_type: "{{ item.accessPolicyType }}"
#        access_policy_number: "{{ item.accessPolicyNumber }}"
      with_items: "{{ ms_port }}"
      when: item.type == "access" and item.accessPolicyType == "Open"

    - name: "TASK 3: CONFIGURE ACCESS PORTS WITH RADIUS"
      meraki_ms_switchport:
        auth_key: "{{ meraki_key }}"
        serial: "{{ item.serial_nos }}"
        state: present
        number: "{{ item.id }}"
        name: "{{ item.name }}"
        type:  "{{ item.type }}"
        vlan: "{{ item.vlan }}"
        stp_guard: "{{ item.stpGuard }}"
        access_policy_type: "{{ item.accessPolicyType }}"
        access_policy_number: "{{ item.accessPolicyNumber }}"
      with_items: "{{ ms_port }}"
      when: item.type == "access" and item.accessPolicyType != "Open"

    - name: "TASK 4: CONFIGURE TRUNK PORTS"
      meraki_ms_switchport:
        auth_key: "{{ meraki_key }}"
        serial: "{{ item.serial_nos }}"
        state: present
        number: "{{ item.id }}"
        name: "{{ item.name }}"
        type:  "{{ item.type }}"
        vlan: "{{ item.vlan }}"
        stp_guard: "{{ item.stpGuard }}"
        access_policy_type: "{{ item.accessPolicyType }}"
        allowed_vlans: "{{ item.allowedVlans}}"
      with_items: "{{ ms_port }}"
      when: item.type == "trunk"